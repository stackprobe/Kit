<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MainTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAACAgEAABAAQA6AIAAF4BAAAwMBAAAQAEAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wCIiIiIMzMzM4d3d3e7u7uzh4iIiDMz
        M7OHh3d3u7uzs4eHiIgzM7Ozh4eHd7uzs7OHh4eIM7Ozs4eHh4ezs7Ozbm5ubnh4eHhubm5miHh4eG5u
        bu53eHh4bm5mZoiIeHhubu7ud3d4eG5mZmaIiIh4bu7u7nd3d3hmZmZmiIiIiAAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAA
        AAABAAQAAAAAAIACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDA
        wACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AIiIiIiIiIiIgzMzMzMzMzOIiIiIiIiIiIMz
        MzMzMzMziHd3d3d3d3d7u7u7u7u7M4h3d3d3d3d3e7u7u7u7uzOId4iIiIiIiIMzMzMzM7sziHeIiIiI
        iIiDMzMzMzO7M4h3iHd3d3d3e7u7u7szuzOId4h3d3d3d3u7u7u7M7sziHeId4iIiIiDMzMzuzO7M4h3
        iHeIiIiIgzMzM7szuzOId4h3iHd3d3u7uzO7M7sziHeId4h3d3d7u7szuzO7M4h3iHeId4iIgzO7M7sz
        uzOId4h3iHeIiIMzuzO7M7sziHeId4h3iHd7M7szuzO7M4h3iHeId4h3ezO7M7szuzOId4h3iHeId3sz
        uzO7M7szZu5m7mbuZu7niHeId4h3iGbuZu5m7mZmaIh3iHeId4hm7mbuZu5mZmiId4h3iHeIZu5m7mbu
        7u7nd3eId4h3iGbuZu5m7u7u53d3iHeId4hm7mbuZmZmZmiIiIh3iHeIZu5m7mZmZmZoiIiId4h3iGbu
        Zu7u7u7u53d3d3eId4hm7mbu7u7u7ud3d3d3iHeIZu5mZmZmZmZoiIiIiIh3iGbuZmZmZmZmaIiIiIiI
        d4hm7u7u7u7u7ud3d3d3d3eIZu7u7u7u7u7nd3d3d3d3iGZmZmZmZmZmaIiIiIiIiIhmZmZmZmZmZmiI
        iIiIiIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAAAAMAAAAGAAAAABAAQAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AIiI
        iIiIiIiIiIiIiIMzMzMzMzMzMzMzM4iIiIiIiIiIiIiIiIMzMzMzMzMzMzMzM4iIiIiIiIiIiIiIiIMz
        MzMzMzMzMzMzM4iHd3d3d3d3d3d3d3u7u7u7u7u7u7uzM4iHd3d3d3d3d3d3d3u7u7u7u7u7u7uzM4iH
        d3d3d3d3d3d3d3u7u7u7u7u7u7uzM4iHd4iIiIiIiIiIiIMzMzMzMzMzM7uzM4iHd4iIiIiIiIiIiIMz
        MzMzMzMzM7uzM4iHd4iIiIiIiIiIiIMzMzMzMzMzM7uzM4iHd4iHd3d3d3d3d3u7u7u7u7uzM7uzM4iH
        d4iHd3d3d3d3d3u7u7u7u7uzM7uzM4iHd4iHd3d3d3d3d3u7u7u7u7uzM7uzM4iHd4iHd4iIiIiIiIMz
        MzMzM7uzM7uzM4iHd4iHd4iIiIiIiIMzMzMzM7uzM7uzM4iHd4iHd4iIiIiIiIMzMzMzM7uzM7uzM4iH
        d4iHd4iHd3d3d3u7u7uzM7uzM7uzM4iHd4iHd4iHd3d3d3u7u7uzM7uzM7uzM4iHd4iHd4iHd3d3d3u7
        u7uzM7uzM7uzM4iHd4iHd4iHd4iIiIMzM7uzM7uzM7uzM4iHd4iHd4iHd4iIiIMzM7uzM7uzM7uzM4iH
        d4iHd4iHd4iIiIMzM7uzM7uzM7uzM4iHd4iHd4iHd4iHd3uzM7uzM7uzM7uzM4iHd4iHd4iHd4iHd3uz
        M7uzM7uzM7uzM4iHd4iHd4iHd4iHd3uzM7uzM7uzM7uzM4iHd4iHd4iHd4iHd3uzM7uzM7uzM7uzM2Zu
        7mZu7mZu7mZu7ud4iHd4iHd4iHd4iGZu7mZu7mZu7mZu7ud4iHd4iHd4iHd4iGZu7mZu7mZu7mZmZmiI
        iHd4iHd4iHd4iGZu7mZu7mZu7mZmZmiIiHd4iHd4iHd4iGZu7mZu7mZu7mZmZmiIiHd4iHd4iHd4iGZu
        7mZu7mZu7u7u7ud3d3d4iHd4iHd4iGZu7mZu7mZu7u7u7ud3d3d4iHd4iHd4iGZu7mZu7mZu7u7u7ud3
        d3d4iHd4iHd4iGZu7mZu7mZmZmZmZmiIiIiIiHd4iHd4iGZu7mZu7mZmZmZmZmiIiIiIiHd4iHd4iGZu
        7mZu7mZmZmZmZmiIiIiIiHd4iHd4iGZu7mZu7u7u7u7u7ud3d3d3d3d4iHd4iGZu7mZu7u7u7u7u7ud3
        d3d3d3d4iHd4iGZu7mZu7u7u7u7u7ud3d3d3d3d4iHd4iGZu7mZmZmZmZmZmZmiIiIiIiIiIiHd4iGZu
        7mZmZmZmZmZmZmiIiIiIiIiIiHd4iGZu7mZmZmZmZmZmZmiIiIiIiIiIiHd4iGZu7u7u7u7u7u7u7ud3
        d3d3d3d3d3d4iGZu7u7u7u7u7u7u7ud3d3d3d3d3d3d4iGZu7u7u7u7u7u7u7ud3d3d3d3d3d3d4iGZm
        ZmZmZmZmZmZmZmiIiIiIiIiIiIiIiGZmZmZmZmZmZmZmZmiIiIiIiIiIiIiIiGZmZmZmZmZmZmZmZmiI
        iIiIiIiIiIiIiAAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//w==
</value>
  </data>
</root>